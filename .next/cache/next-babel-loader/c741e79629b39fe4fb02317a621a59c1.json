{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\carri\\\\Desktop\\\\Github\\\\minehut.xyz\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    fontSize: \"18px\",\n    \"& a\": {\n      color: \"#00aaff\",\n      \"text-decoration\": \"none\"\n    }\n  }\n});\nconst drawerWidth = 240;\nexport default function PermanentDrawerLeft({\n  markdownBody\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      className: classes.root,\n      plugins: [gfm],\n      source: markdownBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\nexport async function getStaticProps() {\n  const content = await import(`../README.md`);\n  const config = await import(`../data/config.json`);\n  const data = matter(content.default);\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/carri/Desktop/Github/minehut.xyz/pages/index.js"],"names":["React","matter","ReactMarkdown","gfm","makeStyles","Container","useStyles","root","fontSize","color","drawerWidth","PermanentDrawerLeft","markdownBody","classes","getStaticProps","content","config","data","default","props","siteTitle","title","frontmatter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC5BG,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE,MADL;AAEL,WAAO;AACNC,MAAAA,KAAK,EAAE,SADD;AAEN,yBAAmB;AAFb;AAFF;AADsB,CAAD,CAA5B;AAUA,MAAMC,WAAW,GAAG,GAApB;AAEA,eAAe,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA+C;AAC7D,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,sBACC,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACC,QAAC,aAAD;AACC,MAAA,SAAS,EAAEO,OAAO,CAACN,IADpB;AAEC,MAAA,OAAO,EAAE,CAACJ,GAAD,CAFV;AAGC,MAAA,MAAM,EAAES;AAHT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA;AAED,OAAO,eAAeE,cAAf,GAAgC;AACtC,QAAMC,OAAO,GAAG,MAAM,OAAQ,cAAR,CAAtB;AACA,QAAMC,MAAM,GAAG,MAAM,OAAQ,qBAAR,CAArB;AACA,QAAMC,IAAI,GAAGhB,MAAM,CAACc,OAAO,CAACG,OAAT,CAAnB;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAE;AACNC,MAAAA,SAAS,EAAEJ,MAAM,CAACK,KADZ;AAENC,MAAAA,WAAW,EAAEL,IAAI,CAACA,IAFZ;AAGNL,MAAAA,YAAY,EAAEK,IAAI,CAACF;AAHb;AADD,GAAP;AAOA","sourcesContent":["import React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tfontSize: \"18px\",\n\t\t\"& a\": {\n\t\t\tcolor: \"#00aaff\",\n\t\t\t\"text-decoration\": \"none\",\n\t\t},\n\t},\n});\n\nconst drawerWidth = 240;\n\nexport default function PermanentDrawerLeft({ markdownBody }) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Container maxWidth=\"md\">\n\t\t\t<ReactMarkdown\n\t\t\t\tclassName={classes.root}\n\t\t\t\tplugins={[gfm]}\n\t\t\t\tsource={markdownBody}\n\t\t\t/>\n\t\t\t{/* <style jsx global>\n\t\t\t\t{`\n\t\t\t\t\ta {\n\t\t\t\t\t\tcolor: #00aaff;\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t}\n\t\t\t\t\ttable {\n\t\t\t\t\t\tborder-spacing: 5px;\n\t\t\t\t\t}\n\t\t\t\t\tth {\n\t\t\t\t\t\tborder-bottom: 3px solid white;\n\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t</style> */}\n\t\t</Container>\n\t);\n}\n\nexport async function getStaticProps() {\n\tconst content = await import(`../README.md`);\n\tconst config = await import(`../data/config.json`);\n\tconst data = matter(content.default);\n\n\treturn {\n\t\tprops: {\n\t\t\tsiteTitle: config.title,\n\t\t\tfrontmatter: data.data,\n\t\t\tmarkdownBody: data.content,\n\t\t},\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}