{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\carri\\\\Desktop\\\\Github\\\\minehut.xyz\\\\src\\\\CustomDrawer.js\";\nimport React from \"react\";\nimport { Drawer, Toolbar, List, ListItem, ListItemIcon, ListItemText, Collapse } from \"@material-ui/core\";\nimport Link from \"../src/Link\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nconst drawerWidth = 350;\nconst useStyles = makeStyles({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: \"right\",\n    color: \"white !important\"\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    // backgroundColor: theme.palette.type === \"dark\" ? \"#303030\" : \"#eeeeee\",\n    //background: \"linear-gradient(120deg, #7289da, #66a6ff)\",\n    backgroundColor: \"#2e3238\"\n  },\n  drawerContainer: {\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(4)\n  },\n  nestedText: {\n    marginLeft: theme.spacing(3)\n  }\n});\nexport default function CustomDrawer() {\n  const routes = {\n    Home: \"/\",\n    Contribute: \"/contribute\",\n    FAQ: {\n      Skript: \"/faq/skript\"\n    }\n  };\n  const dropdowns = {};\n  Object.keys(routes).forEach(route => {\n    if (typeof routes[route] !== \"object\") return;\n    const [open, setOpen] = React.useState(true);\n    dropdowns[route].open = open;\n\n    dropdowns[route].setOpen = () => setOpen(!open);\n  });\n  console.log(dropdowns);\n\n  function mapRoutes(routes, i) {\n    return Object.keys(routes).map((route, index) => {\n      if (typeof routes[route] === \"string\") {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: Link,\n          naked: true,\n          href: routes[route],\n          selected: i + index === selectedIndex,\n          onClick: e => handleListItemClick(e, index + i),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: route\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)\n        }, routes[route], false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: dropdowns[route].setOpen,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: route\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: dropdowns[route],\n            children: mapRoutes(routes[route])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true);\n      }\n    });\n  }\n\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.drawerContainer,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: mapRoutes(routes, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/carri/Desktop/Github/minehut.xyz/src/CustomDrawer.js"],"names":["React","Drawer","Toolbar","List","ListItem","ListItemIcon","ListItemText","Collapse","Link","MailIcon","InboxIcon","makeStyles","theme","ExpandLess","ExpandMore","drawerWidth","useStyles","drawer","width","flexShrink","textAlign","color","drawerPaper","backgroundColor","drawerContainer","overflowY","overflowX","marginTop","spacing","nestedText","marginLeft","CustomDrawer","routes","Home","Contribute","FAQ","Skript","dropdowns","Object","keys","forEach","route","open","setOpen","useState","console","log","mapRoutes","i","map","index","selectedIndex","e","handleListItemClick","classes","setSelectedIndex","event","handleClick","paper"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n\tDrawer,\r\n\tToolbar,\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tCollapse,\r\n} from \"@material-ui/core\";\r\nimport Link from \"../src/Link\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport theme from \"./theme\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles({\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t\ttextAlign: \"right\",\r\n\t\tcolor: \"white !important\",\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t\t// backgroundColor: theme.palette.type === \"dark\" ? \"#303030\" : \"#eeeeee\",\r\n\t\t//background: \"linear-gradient(120deg, #7289da, #66a6ff)\",\r\n\t\tbackgroundColor: \"#2e3238\",\r\n\t},\r\n\tdrawerContainer: {\r\n\t\toverflowY: \"auto\",\r\n\t\toverflowX: \"hidden\",\r\n\t\tmarginTop: theme.spacing(4),\r\n\t},\r\n\tnestedText: {\r\n\t\tmarginLeft: theme.spacing(3),\r\n\t},\r\n});\r\n\r\nexport default function CustomDrawer() {\r\n\tconst routes = {\r\n\t\tHome: \"/\",\r\n\t\tContribute: \"/contribute\",\r\n\t\tFAQ: {\r\n\t\t\tSkript: \"/faq/skript\",\r\n\t\t},\r\n\t};\r\n\r\n\tconst dropdowns = {};\r\n\r\n\tObject.keys(routes).forEach((route) => {\r\n\t\tif (typeof routes[route] !== \"object\") return;\r\n\t\tconst [open, setOpen] = React.useState(true);\r\n\t\tdropdowns[route].open = open;\r\n\t\tdropdowns[route].setOpen = () => setOpen(!open);\r\n\t});\r\n\r\n\tconsole.log(dropdowns);\r\n\r\n\tfunction mapRoutes(routes, i) {\r\n\t\treturn Object.keys(routes).map((route, index) => {\r\n\t\t\tif (typeof routes[route] === \"string\") {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\tnaked\r\n\t\t\t\t\t\thref={routes[route]}\r\n\t\t\t\t\t\tkey={routes[route]}\r\n\t\t\t\t\t\tselected={i + index === selectedIndex}\r\n\t\t\t\t\t\tonClick={(e) => handleListItemClick(e, index + i)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListItemText>{route}</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ListItem button onClick={dropdowns[route].setOpen}>\r\n\t\t\t\t\t\t\t<ListItemText>{route}</ListItemText>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<Collapse in={dropdowns[route]}>\r\n\t\t\t\t\t\t\t{mapRoutes(routes[route])}\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n\tconst handleListItemClick = (event, index) => {\r\n\t\tsetSelectedIndex(index);\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tclassName={classes.drawer}\r\n\t\t\tvariant=\"permanent\"\r\n\t\t\tclasses={{\r\n\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t}}\r\n\t\t\tanchor=\"left\"\r\n\t\t>\r\n\t\t\t<Toolbar />\r\n\t\t\t<div className={classes.drawerContainer}>\r\n\t\t\t\t<List dense>{mapRoutes(routes, 0)}</List>\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}